name: Javascript build

on:
  push:
    branches:
      - master
    paths:
      - 'web/html/src/**'
      - '.github/workflows/javascript-build.yml'
  pull_request:
    paths:
      - 'web/html/src/**'
      - '.github/workflows/javascript-build.yml'

jobs:
  javascript_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #v5.0.0
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get Yarn cache directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use Yarn cache
      uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf #v4.2.2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    # We only install production dependencies here to simulate a situation similar to OBS/IBS
    - name: Install production dependencies
      run: yarn install --force --ignore-optional --production=true --frozen-lockfile --prefer-offline

    - name: Build application
      run: yarn build
