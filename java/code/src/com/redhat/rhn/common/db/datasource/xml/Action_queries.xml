<datasource_modes>

<mode name="system_events_history" class="com.redhat.rhn.frontend.dto.HistoryEvent">
  <query params="sid">
SELECT EVENT_ID as ID,
       CREATED,
       PICKED_UP,
       COMPLETED,
       SUMMARY,
       HISTORY_TYPE,
       HISTORY_TYPE_NAME,
       HISTORY_STATUS,
       DETAILS
  FROM (SELECT SH.id EVENT_ID,
               SH.summary AS SUMMARY,
               NULL::timestamptz AS created,
               NULL::timestamptz AS picked_up,
               SH.created AS completed, -- view this as the "completed" date for sorting reasons
               NULL AS history_status,
               NULL AS history_type,
               NULL AS history_type_name,
               SH.details
          FROM rhnServerHistory SH
         WHERE SH.server_id = :sid
         UNION ALL
        SELECT SA.action_id AS EVENT_ID,
               AType.name || ' scheduled by ' || COALESCE(U.login, '(system)') AS SUMMARY,
               SA.created,
               SA.pickup_time AS picked_up,
               SA.completion_time AS completed,
               AStat.name AS history_status,
               AType.label AS history_type,
               AType.name AS history_type_name,
               NULL AS details
          FROM rhnServerAction SA
          JOIN rhnAction A ON SA.action_id = A.id
          JOIN rhnActionType AType ON A.action_type = AType.id
          JOIN rhnActionStatus AStat ON SA.status = AStat.id
          LEFT JOIN web_contact U ON A.scheduler = U.id
         WHERE SA.server_id = :sid
           AND SA.status IN (1, 2, 3)
       ) X
ORDER BY COMPLETED DESC, PICKED_UP DESC, CREATED DESC, EVENT_ID DESC
  </query>
</mode>

<query name="action_overview_elab" params="user_id, org_id" multiple="t">
SELECT UAO.id,
       UAO.action_status,
       UAO.tally
  FROM rhnUserActionOverview UAO
 WHERE UAO.org_id = :org_id
   AND UAO.user_id = :user_id
   AND UAO.id IN (%s)
</query>

<mode name="recently_scheduled_action_list"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id, age">
SELECT
    DISTINCT A.id AS id,
    A.earliest_action AS earliest,
    AT.name AS type_name,
    COALESCE(A.name, AT.name) AS action_name,
    A.scheduler AS scheduler,
    SA.status AS action_status_id
FROM
    rhnAction A
    JOIN rhnActionType AT ON A.action_type = AT.id
    JOIN rhnServerAction SA ON A.id = SA.action_id
WHERE
    A.org_id = :org_id
    AND EXISTS (SELECT 1
                    FROM rhnUserServerPerms USP
                    WHERE USP.user_id = :user_id
                    AND USP.server_id = SA.server_id)
    AND A.created &gt; current_timestamp - (:age * interval '1 day')
ORDER BY id DESC
  </query>
</mode>

<mode name="pending_action_list"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE user_id = :user_id AND org_id = :org_id
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) AS total_systems,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        A.prerequisite AS PREREQUISITE,
        COALESCE(PS.total_systems = PS.failed_systems, FALSE) AS PREREQUISITE_ALL_FAILED,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END)
            || ' scheduled by '
            || (CASE WHEN WC.login IS NULL THEN '(unknown)' ELSE WC.login END) AS ACTION_NAME,
        UAO.scheduler,
        WC.login AS SCHEDULER_NAME,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  JOIN rhnAction A ON UAO.id = A.id
  LEFT JOIN web_contact WC on UAO.scheduler = WC.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
  LEFT JOIN actionCounts PS ON A.prerequisite = PS.action_id
 WHERE  UAO.action_status_id IN (0,1)
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<mode name="pending_actions_in_set"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id, set_label">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE user_id = :user_id AND org_id = :org_id
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) AS total_systems,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        A.prerequisite AS PREREQUISITE,
        COALESCE(PS.total_systems = PS.failed_systems, FALSE) AS PREREQUISITE_ALL_FAILED,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END) AS ACTION_NAME,
        UAO.scheduler,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  JOIN rhnAction A ON UAO.id = A.id
  JOIN rhnSet ST ON ST.element = A.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
  LEFT JOIN actionCounts PS ON A.prerequisite = PS.action_id
 WHERE  UAO.action_status_id IN (0,1)
   AND  UAO.archived = 0
   AND  ST.user_id = :user_id
   AND  ST.label = :set_label
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<mode name="all_action_list"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE user_id = :user_id AND org_id = :org_id
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END) || ' scheduled by ' || (CASE WHEN WC.login IS NULL THEN '(unknown)' ELSE WC.login END) AS ACTION_NAME,
        UAO.scheduler,
        WC.login AS SCHEDULER_NAME,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  LEFT JOIN web_contact WC on UAO.scheduler = WC.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<mode name="completed_action_list"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE user_id = :user_id AND org_id = :org_id
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END) || ' scheduled by ' || (CASE WHEN WC.login IS NULL THEN '(unknown)' ELSE WC.login END) AS ACTION_NAME,
        UAO.scheduler,
        WC.login AS SCHEDULER_NAME,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  LEFT JOIN web_contact WC on UAO.scheduler = WC.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
 WHERE  UAO.action_status_id = 2
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<mode name="failed_action_list"
    class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE user_id = :user_id AND org_id = :org_id
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END) || ' scheduled by ' || (CASE WHEN WC.login IS NULL THEN '(unknown)' ELSE WC.login END) AS ACTION_NAME,
        UAO.scheduler,
        WC.login AS SCHEDULER_NAME,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  LEFT JOIN web_contact WC on UAO.scheduler = WC.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
 WHERE  UAO.action_status_id  = 3
   AND  UAO.archived = 0
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<mode name="archived_action_list"
      class="com.redhat.rhn.frontend.dto.ScheduledAction">
  <query params="user_id, org_id, include_orphans">
WITH userActionOverviewData AS (
    SELECT * FROM rhnUserActionOverview
    WHERE org_id = :org_id
      AND (user_id = :user_id OR (:include_orphans = 'Y' AND user_id IS NULL))
), actionCounts AS (
    SELECT
        id AS action_id,
        SUM(tally) FILTER (WHERE action_status_id IN (0, 1)) AS in_progress_systems,
        SUM(tally) FILTER (WHERE action_status_id = 2) AS completed_systems,
        SUM(tally) FILTER (WHERE action_status_id = 3) AS failed_systems
    FROM userActionOverviewData
    GROUP BY id
)
SELECT  DISTINCT UAO.id AS ID,
        UAO.earliest_action AS EARLIEST,
        UAO.type_name,
        (CASE WHEN UAO.action_name IS NULL THEN UAO.type_name ELSE UAO.action_name END) || ' scheduled by ' || (CASE WHEN WC.login IS NULL THEN '(unknown)' ELSE WC.login END) AS ACTION_NAME,
        WC.login AS SCHEDULER_NAME,
        COALESCE(AC.in_progress_systems, 0) AS "IN_PROGRESS_SYSTEMS",
        COALESCE(AC.completed_systems, 0) AS "COMPLETED_SYSTEMS",
        COALESCE(AC.failed_systems, 0) AS "FAILED_SYSTEMS"
  FROM  userActionOverviewData UAO
  LEFT JOIN web_contact WC on UAO.scheduler = WC.id
  LEFT JOIN actionCounts AC ON UAO.id = AC.action_id
 WHERE  UAO.archived = 1
ORDER BY EARLIEST DESC
  </query>
  <elaborator name="action_overview_elab" />
</mode>

<write-mode name="archive_actions">
  <query params="user_id, label, org_id">
UPDATE rhnAction
   SET archived = 1
 WHERE id IN (SELECT element FROM rhnSet WHERE user_id = :user_id
                 AND label = :label)
   AND org_id = :org_id
  </query>
</write-mode>

<write-mode name="delete_actions">
  <query params="user_id, label, org_id">
DELETE FROM rhnAction
 WHERE id IN (SELECT element FROM rhnSet WHERE user_id = :user_id
                 AND label = :label)
   AND org_id = :org_id
  </query>
</write-mode>

<write-mode name="delete_actions_by_id_and_type">
  <query params="id, action_type">
DELETE FROM rhnAction WHERE id = :id AND action_type = :action_type
  </query>
</write-mode>

<write-mode name="schedule_action">
  <query params="action_id, name_id, evr_id, arch_id, pkg_parameter">
INSERT INTO rhnActionPackage (id, action_id, parameter, name_id, evr_id, package_arch_id)
VALUES (sequence_nextval('rhn_act_p_id_seq'), :action_id, :pkg_parameter, :name_id, :evr_id, :arch_id)
  </query>
</write-mode>

<!-- this is so WRONG -->
<write-mode name="insert_package_delta_element">
  <query params="delta_id, operation, n, e, v, r, a">
INSERT INTO rhnPackageDeltaElement (package_delta_id, transaction_package_id)
VALUES (:delta_id, lookup_transaction_package(:operation, :n, :e, :v, :r, :a))
  </query>
</write-mode>

<write-mode name="insert_action_package_delta">
  <query params="action_id, delta_id">
INSERT INTO rhnActionPackageDelta (action_id, package_delta_id)
VALUES (:action_id, :delta_id)
  </query>
</write-mode>

<mode name="visible_to_user">
  <query params="user_id, org_id, aid, include_orphans">
SELECT  1
  FROM  rhnUserActionOverview UAO
 WHERE  (UAO.user_id = :user_id OR (:include_orphans = 'Y' AND UAO.user_id IS NULL))
   AND  UAO.id = :aid
   AND  UAO.org_id = :org_id
  </query>
</mode>

<write-mode name="insert_server_actions">
  <query params="parent_id, status_id, tries">
INSERT INTO rhnServerAction (server_id, action_id, status, REMAINING_TRIES)
 select  s.id as server_id, :parent_id as action_id,
         :status_id as status, :tries as REMAINING_TRIES
     from rhnServer s
     where s.id in (%s)
  </query>
</write-mode>

</datasource_modes>
